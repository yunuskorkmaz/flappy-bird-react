{"version":3,"sources":["store/GameStore.js","Game.js","index.js"],"names":["GameStore","birdLeft","birdBottom","gravity","gameTimerId","pillars","createPillarTimerId","gap","score","isStartGame","makeAutoObservable","this","setTimeout","filter","a","left","pillarBottom","Math","floor","random","push","id","toString","topBottom","bottom","forEach","pillar","gameOver","clearInterval","isGameOver","createPillar","createPillarId","setInterval","timerID","movePillars","state","Game","observer","className","onClick","jump","style","map","startGame","stop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2325810.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\n\n\nexport default class GameStore {\n    birdLeft = 220;\n    birdBottom = 300;\n    gravity = 2.2;\n    gameTimerId = null;\n    pillars = [];\n    createPillarTimerId = null;\n    gap = 430;\n    score = 0;\n    isStartGame= false\n\n    constructor() {\n        makeAutoObservable(this);\n\n    }\n\n    jump() {\n        if (this.birdBottom > 0 && this.isStartGame ) {\n            this.birdBottom += 11;\n            setTimeout(() => {\n                this.birdBottom += 11;\n            }, 6);\n            setTimeout(() => {\n                this.birdBottom += 11;\n            }, 12);\n            setTimeout(() => {\n                this.birdBottom += 11;\n            }, 18);\n        }\n    }\n\n    createPillar() {\n        this.pillars = this.pillars.filter((a) => a.left > -150);\n\n        let left = 500;\n        let randomHeight = 1 + Math.floor((100 - 1) * Math.random()) - 100;\n        let pillarBottom = randomHeight;\n\n        this.pillars.push({\n            id: Math.random().toString() + Math.random().toString(),\n            left: left,\n            topBottom: pillarBottom + this.gap,\n            bottom: pillarBottom\n        });\n    }\n\n    movePillars() {\n        this.pillars.forEach((pillar) => {\n            pillar.left -= 2;\n            if (\n                (pillar.left > 200 &&\n                    pillar.left < 280 &&\n                    this.birdLeft === 220 &&\n                    (this.birdBottom < pillar.bottom + 296 ||\n                        this.birdBottom > pillar.bottom + this.gap - 45)) ||\n                this.birdBottom === 1\n            ) {\n                this.gameOver();\n                // || this.birdBottom > pillar.bottom + this.gap - 200\n            } else if (pillar.left == 200) {\n                this.score++;\n            }\n        });\n    }\n\n    gameOver() {\n        clearInterval(this.gameTimerId);\n        clearInterval(this.createPillarTimerId);\n        this.createPillarTimerId = null;\n        this.gameTimerId = null;\n        this.isGameOver = true;\n    }\n\n    startGame() {\n        if (this.gameTimerId === null) {\n            this.createPillar();\n            const createPillarId = setInterval(() => {\n                this.createPillar();\n            }, 3000);\n            this.createPillarTimerId = createPillarId;\n\n            const timerID = setInterval(() => {\n                this.birdBottom -= this.gravity;\n                this.movePillars();\n            }, 20);\n            this.gameTimerId = timerID;\n            this.isGameOver = false;\n            this.isStartGame = true;\n            this.score = 0;\n        }\n    }\n\n    stop() {\n        clearInterval(this.gameTimerId);\n        clearInterval(this.createPillarTimerId);\n        this.createPillarTimerId = null;\n        this.gameTimerId = null;\n        this.birdBottom = 300;\n        this.pillars = [];\n        this.isGameOver = true;\n    }\n}","import { observer } from \"mobx-react-lite\";\nimport GameStore from \"./store/GameStore\";\n\nimport './game.css';\n\nvar state = new GameStore();\n\nconst Game = observer(() => {\n\n    const jump = () => {\n        if (!state.isGameOver) {\n            state.jump();\n        }\n    };\n\n    const stop = () => {\n        state.stop();\n    };\n\n    const startGame = () => {\n        state.startGame();\n    };\n\n    return (\n        <>\n            <div className=\"game-container\" onClick={jump}>\n                <div className=\"score\">{state.score}</div>\n                <div className=\"sky\">\n                    <div\n                        className=\"bird\"\n                        style={{\n                            left: state.birdLeft + \"px\",\n                            bottom: state.birdBottom + \"px\"\n                        }}\n                    ></div>\n                    {state.pillars.map((pillar) => {\n                        return (\n                            <>\n                                <div\n                                    key={pillar.id + \"top\"}\n                                    style={{\n                                        left: pillar.left + \"px\",\n                                        bottom: pillar.topBottom + \"px\"\n                                    }}\n                                    className=\"pillar reverse\"\n                                ></div>\n                                <div\n                                    key={pillar.id + \"bottom\"}\n                                    style={{\n                                        left: pillar.left + \"px\",\n                                        bottom: pillar.bottom + \"px\"\n                                    }}\n                                    className=\"pillar\"\n                                ></div>\n                            </>\n                        );\n                    })}\n                </div>\n                <div className=\"ground\"></div>\n                {state.isGameOver && (\n                    <div className=\"game-over\">\n                        Game Over\n                        <div className=\"game-over-score\">\n                            <div>Score</div>\n                            <div>\n                                {state.score}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n            <button onClick={() => startGame()}>start</button>\n            <button onClick={stop}>stop</button>\n        </>\n    );\n})\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Game from './Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}